// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 16.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace T4CAGC.Template
{
    using System.Collections.Generic;
    using T4CAGC.Model;
    using Microservice.Library.Extension;
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Implementation : ImplementationBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("  \r\n");
            this.Write(@"/*\__________________________________________________________________________________________________
|*												提示											 __≣|
|* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~| 
|*      此代码由T4模板自动生成																	|
|*		版本:");
            
            #line 6 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\.\Reuseable\BaseHead.ttinclude"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Version.PadRight(83, ' ')));
            
            #line default
            #line hidden
            this.Write("|__\r\n|*\t\t日期:");
            
            #line 7 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\.\Reuseable\BaseHead.ttinclude"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss").PadRight(86, ' ')));
            
            #line default
            #line hidden
            this.Write("≣|\r\n|*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tby  LCTR\t\t   ≣|\r\n|* ___________________________________" +
                    "_____________________________________________________________≣|\r\n\\*/\r\n\r\n\r\n\r\n");
            
            #line 14 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\.\Reuseable\BaseHead.ttinclude"

	foreach (var @namespace in NameSpaces?.OrderBy(o => o))
	{

            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 18 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\.\Reuseable\BaseHead.ttinclude"
            this.Write(this.ToStringHelper.ToStringWithCulture(@namespace));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 19 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\.\Reuseable\BaseHead.ttinclude"

	}

            
            #line default
            #line hidden
            this.Write("\r\nnamespace Business.Implementation.");
            
            #line 7 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ModuleName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    /// <summary>\r\n    /// ");
            
            #line 10 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("业务类\r\n    /// </summary>\r\n    public class ");
            
            #line 12 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("Business : BaseBusiness, I");
            
            #line 12 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("Business\r\n    {\r\n        #region DI\r\n\r\n        public ");
            
            #line 16 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("Business(\r\n");
            
            #line 17 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if (Options.Table.FreeSql)
        {

            
            #line default
            #line hidden
            this.Write("            IFreeSqlProvider freeSqlProvider,\r\n");
            
            #line 22 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        if (Options.Table.Elasticsearch)
        {

            
            #line default
            #line hidden
            this.Write("            IElasticsearchProvider elasticsearchProvider,\r\n");
            
            #line 29 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        if (Functions.ContainsKey(Function.Import) || Functions.ContainsKey(Function.Export))
        {

            
            #line default
            #line hidden
            this.Write("            IHttpContextAccessor httpContextAccessor,\r\n");
            
            #line 36 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("            IAutoMapperProvider autoMapperProvider,\r\n            IOperationRecord" +
                    "Business operationRecordBusiness)\r\n        {\r\n");
            
            #line 42 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"


        if (Options.Table.FreeSql)
        {

            
            #line default
            #line hidden
            this.Write("            Orm = freeSqlProvider.GetFreeSql();\r\n            Repository = Orm.Get" +
                    "Repository<");
            
            #line 48 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 48 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryTupleParams();
            
            #line default
            #line hidden
            this.Write(">();\r\n");
            
            #line 49 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        if (Options.Table.Elasticsearch)
        {

            
            #line default
            #line hidden
            this.Write("            ESClient = elasticsearchProvider.GetElasticsearch<");
            
            #line 55 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(">();\r\n");
            
            #line 56 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        if (Functions.ContainsKey(Function.Import) || Functions.ContainsKey(Function.Export))
        {

            
            #line default
            #line hidden
            this.Write("            HttpContextAccessor = httpContextAccessor;\r\n");
            
            #line 63 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("            Mapper = autoMapperProvider.GetMapper();\r\n            OperationRecord" +
                    "Business = operationRecordBusiness;\r\n        }\r\n\r\n        #endregion\r\n\r\n        " +
                    "#region 私有成员\r\n");
            
            #line 73 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if (Options.Table.FreeSql)
        {

            
            #line default
            #line hidden
            this.Write("\r\n        readonly IFreeSql Orm;\r\n\r\n        readonly IBaseRepository<");
            
            #line 80 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 80 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryTupleParams();
            
            #line default
            #line hidden
            this.Write("> Repository;\r\n");
            
            #line 81 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        
        if (Options.Table.Elasticsearch)
        {

            
            #line default
            #line hidden
            this.Write("\r\n        readonly ElasticsearchClient ESClient;\r\n");
            
            #line 89 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        
        if (Functions.ContainsKey(Function.Import) || Functions.ContainsKey(Function.Export))
        {

            
            #line default
            #line hidden
            this.Write("\r\n        readonly IHttpContextAccessor HttpContextAccessor;\r\n");
            
            #line 97 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n        readonly IMapper Mapper;\r\n\r\n        readonly IOperationRecordBusiness O" +
                    "perationRecordBusiness;\r\n\r\n        #endregion\r\n\r\n        #region 基础功能\r\n");
            
            #line 108 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    foreach (var field in Options.Table.Fields)
    {
        if(field.Consts.Any_Ex())
        {

            
            #line default
            #line hidden
            this.Write("\r\n        public List<string> GetAll");
            
            #line 115 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            return typeof(");
            
            #line 117 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 117 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(").GetFields().Select(o => (string)o.GetValue(null)).ToList();\r\n        }\r\n");
            
            #line 119 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        
        if(field.Enums.Any_Ex())
        {

            
            #line default
            #line hidden
            this.Write("\r\n        public Dictionary<string, string> GetAll");
            
            #line 126 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var nameAndDescriptionDic = new Dictionary<string, str" +
                    "ing>();\r\n\r\n            var type = typeof(");
            
            #line 130 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 130 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            foreach (var item in Enum.GetValues<");
            
            #line 132 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.ReducedName));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 132 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(@">())
            {
                var attr = type.GetField(item.ToString()).GetCustomAttribute<DescriptionAttribute>();

                if (attr == null)
                    nameAndDescriptionDic.Add(item.ToString(), ((int)item).ToString());
                else
                    nameAndDescriptionDic.Add(attr.Description, item.ToString());
            }

            return nameAndDescriptionDic;
        }
");
            
            #line 144 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
    }

    if(Functions.ContainsKey(Function.List))
    {
        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("\r\n        public List<");
            
            #line 154 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write("> GetTreeList(TreePaginationDTO pagination)\r\n        {\r\n            return GetDat" +
                    "a(pagination, false);\r\n\r\n            List<");
            
            #line 158 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(@"> GetData(TreePaginationDTO pagination, bool deep)
            {
                if (pagination.ParentId.IsNullOrWhiteSpace())
                    pagination.ParentId = null;

                var entityList = Repository.Select
                                    .Where(o => o.ParentId == pagination.ParentId)
                                    .GetPagination(pagination.Pagination)
                                    .ToList<");
            
            #line 166 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 166 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(">(typeof(");
            
            #line 166 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(").GetNamesWithTagAndOther(true, \"_List\"));\r\n\r\n                var result = Mapper" +
                    ".Map<List<");
            
            #line 168 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(@">>(entityList);

                if (result.Any())
                    result.ForEach(o =>
                    {
                        var rank = pagination.Rank;
                        if (!rank.HasValue || rank > 0)
                        {
                            pagination.ParentId = o.Id;
                            pagination.Rank--;
                            o.Children = GetData(pagination, true);
                            o.HasChildren = o.Children.Any_Ex();
                            o.ChildrenCount = o.Children?.Count ?? 0;
                        }
                        else
                        {
                            o.HasChildren = Repository.Select.Where(p => p.ParentId == o.Id).Any();
                            o.ChildrenCount = (int)Repository.Where(p => p.ParentId == o.Id).Count();
                        }
                    });
                else if (deep)
                    result = null;

                return result;
            }
        }
");
            
            #line 194 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("\r\n        public List<");
            
            #line 200 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write("> GetList(PaginationDTO pagination)\r\n        {\r\n            var entityList = Repo" +
                    "sitory.Select\r\n                                    .GetPagination(pagination)\r\n " +
                    "                                   .ToList<");
            
            #line 204 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 204 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(">(typeof(");
            
            #line 204 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(").GetNamesWithTagAndOther(true, \"_List\"));\r\n\r\n            var result = Mapper.Map" +
                    "<List<");
            
            #line 206 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.List]));
            
            #line default
            #line hidden
            this.Write(">>(entityList);\r\n\r\n            return result;\r\n        }\r\n");
            
            #line 210 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
    }

    if(Functions.ContainsKey(Function.DropdownList))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public List<SelectOption> GetDropdownList(string condition, PaginationD" +
                    "TO pagination)\r\n        {\r\n            var fields = new[] {\r\n");
            
            #line 221 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"


    var i1 = 1;
    foreach (var field in FunctionsWithFields[Function.DropdownList])
    {

            
            #line default
            #line hidden
            this.Write("                nameof(");
            
            #line 227 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 227 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 227 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithFields[Function.DropdownList].Count > 1 && i1 != FunctionsWithFields[Function.DropdownList].Count ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 228 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        i1++;
    }

            
            #line default
            #line hidden
            this.Write(@"            };

            var where = new List<string>();
            if (!condition.IsNullOrWhiteSpace())
            {
                var index = 0;
                var add = false;
                foreach (var item in condition)
                {
                    if (item != ' ')
                    {
                        if (where.Count < index + 1)
                            where.Add("""");
                        where[index] += item;
                        add = false;
                    }
                    else
                    {
                        if (add)
                            continue;
                        index++;
                        add = true;
                    }
                }
            }

            var where_sql = where.Any() ? string.Join("" or "", where.Select(o => string.Join("" or "", fields.Select(p => $""a.\""{p}\"" like '%{o}%'"")))) : null;

            var type = typeof(");
            
            #line 260 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            var select = SelectExtension.Select<");
            
            #line 262 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", SelectOption>(a => new SelectOption\r\n            {\r\n                text = a.Na" +
                    "me,\r\n                value = a.Id,\r\n                search = $\"{a.Name} {a.Code}" +
                    "\",\r\n                options = new List<OptionInfo>\r\n                {\r\n");
            
            #line 269 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    var i2 = 0;
    foreach (var field in FunctionsWithFields[Function.DropdownList])
    {

            
            #line default
            #line hidden
            this.Write("                    new OptionInfo\r\n                    {\r\n                      " +
                    "  display = type.GetDescription(nameof(a.");
            
            #line 276 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(")),\r\n                        value = a.");
            
            #line 277 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write("\r\n                    }");
            
            #line 278 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithFields[Function.DropdownList].Count > 1 && i2 != FunctionsWithFields[Function.DropdownList].Count ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 279 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        i2++;
    }

            
            #line default
            #line hidden
            this.Write("                }\r\n            });\r\n\r\n            var list = from a in Orm.Select" +
                    "<");
            
            #line 286 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(">()\r\n                            .Where(where_sql)\r\n                            ." +
                    "GetPagination(pagination)\r\n                            .ToList<");
            
            #line 289 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 289 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.DropdownList]));
            
            #line default
            #line hidden
            this.Write(">(typeof(");
            
            #line 289 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.DropdownList]));
            
            #line default
            #line hidden
            this.Write(").GetNamesWithTagAndOther(true, \"_List\"))\r\n                       select @select." +
                    "Invoke(a);\r\n\r\n            return list.ToList();\r\n        }\r\n");
            
            #line 294 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

    if(Functions.ContainsKey(Function.Detail))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 301 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Detail]));
            
            #line default
            #line hidden
            this.Write(" GetDetail(");
            
            #line 301 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryParams();
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n");
            
            #line 303 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(PrimaryKeys.Count > 1)
        {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.Where(o => ");
            
            #line 307 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryFieldLinq("o");
            
            #line default
            #line hidden
            this.Write(").GetAndCheckNull();\r\n");
            
            #line 308 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.GetAndCheckNull(");
            
            #line 313 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryTupleParamsName();
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 314 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n            var result = Mapper.Map<");
            
            #line 318 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Detail]));
            
            #line default
            #line hidden
            this.Write(">(entity);\r\n\r\n            return result;\r\n        }\r\n");
            
            #line 322 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

    if(Functions.ContainsKey(Function.Create))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public void Create(");
            
            #line 329 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Create]));
            
            #line default
            #line hidden
            this.Write(" data)\r\n        {\r\n            var newData = Mapper.Map<");
            
            #line 331 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(">(data).InitEntity();\r\n\r\n            //@数据验证#待完善@\r\n            //if (Repository.W" +
                    "here(o => ");
            
            #line 334 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Tree ? "o.ParentId == newData.ParentId && " : ""));
            
            #line default
            #line hidden
            this.Write("o.Name == newData.Name).Any())\r\n            //    throw new MessageException($\"");
            
            #line 335 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Tree ? "同层级下" : ""));
            
            #line default
            #line hidden
            this.Write("已存在名称为[{newData.Name}]的");
            
            #line 335 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(".\");\r\n\r\n            (bool success, Exception ex) = Orm.RunTransaction(() =>\r\n    " +
                    "        {\r\n");
            
            #line 339 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Functions.ContainsKey(Function.Enable))
        {

            
            #line default
            #line hidden
            this.Write("\r\n                newData.");
            
            #line 344 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Enable].Name));
            
            #line default
            #line hidden
            this.Write(" = true;\r\n");
            
            #line 345 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 349 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write(@"                if (newData.ParentId.IsNullOrWhiteSpace())
                {
                    newData.ParentId = null;
                    newData.Level = 0;
                    newData.RootId = null;
                }
                else
                {
                    var parent = Repository.GetAndCheckNull(newData.ParentId);
                    newData.Level = parent.Level + 1;
                    newData.RootId = parent.RootId == null ? parent.Id : parent.RootId;
                }
");
            
            #line 365 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            if(Functions.ContainsKey(Function.Sort))
            {

            
            #line default
            #line hidden
            this.Write("\r\n                newData.");
            
            #line 370 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(" = Repository.Where(o => o.ParentId == newData.ParentId).Max(o => o.");
            
            #line 370 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(") + 1;\r\n");
            
            #line 371 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            }
        }
        else
        {
            if(Functions.ContainsKey(Function.Sort))
            {

            
            #line default
            #line hidden
            this.Write("\r\n                newData.");
            
            #line 380 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(" = Repository.Select.Max(o => o.");
            
            #line 380 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(") + 1;\r\n");
            
            #line 381 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            }
        }

            
            #line default
            #line hidden
            this.Write("\r\n                Repository.Insert(newData);\r\n\r\n                var orId = Opera" +
                    "tionRecordBusiness.Create(new Common_OperationRecord\r\n                {\r\n       " +
                    "             DataType = nameof(");
            
            #line 390 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 391 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("newData", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"创建");
            
            #line 392 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("[@字段说明#待完善@].\"\r\n                });\r\n            });\r\n\r\n            if (!success)" +
                    "\r\n                throw new MessageException(\"创建");
            
            #line 397 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("失败\", ex);\r\n        }\r\n");
            
            #line 399 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

    if(Functions.ContainsKey(Function.Edit))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 406 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Edit]));
            
            #line default
            #line hidden
            this.Write(" GetEdit(");
            
            #line 406 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryParams();
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n");
            
            #line 408 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    if(PrimaryKeys.Count > 1)
    {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.Where(o => ");
            
            #line 412 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryFieldLinq("o");
            
            #line default
            #line hidden
            this.Write(").GetAndCheckNull();\r\n");
            
            #line 413 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.GetAndCheckNull(");
            
            #line 418 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryTupleParamsName();
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 419 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n            var result = Mapper.Map<");
            
            #line 423 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Edit]));
            
            #line default
            #line hidden
            this.Write(">(entity);\r\n\r\n            return result;\r\n        }\r\n\r\n        public void Edit(");
            
            #line 428 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Edit]));
            
            #line default
            #line hidden
            this.Write(" data)\r\n        {\r\n            var editData = Mapper.Map<");
            
            #line 430 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(">(data).ModifyEntity();\r\n\r\n            //@数据验证#待完善@\r\n            //if (Repository" +
                    ".Where(o => ");
            
            #line 433 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Tree ? "o.ParentId == editData.ParentId && " : ""));
            
            #line default
            #line hidden
            this.Write("o.Name == editData.Name && o.Id != editData.Id).Any())\r\n            //    throw n" +
                    "ew MessageException($\"");
            
            #line 434 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Tree ? "同层级下" : ""));
            
            #line default
            #line hidden
            this.Write("已存在名称为[{editData.Name}]的");
            
            #line 434 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(".\");\r\n\r\n            var entity = Repository.GetAndCheckNull(");
            
            #line 436 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("editData", ", ");
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            var changed_ = string.Join(\",\",\r\n                              " +
                    "         entity.GetPropertyValueChangeds<");
            
            #line 439 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(", Edit>(editData)\r\n                                            .Select(p => $\"\\r\\" +
                    "n\\t {p.Description}：{p.FormerValue} 更改为 {p.CurrentValue}\"));\r\n\r\n            (boo" +
                    "l success, Exception ex) = Orm.RunTransaction(() =>\r\n            {\r\n");
            
            #line 444 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write(@"                if (editData.ParentId != entity.ParentId)
                {
                    if (editData.ParentId.IsNullOrWhiteSpace())
                    {
                        editData.ParentId = null;
                        editData.Level = 0;
                        editData.RootId = null;
                    }
                    else
                    {
                        var parent = Repository.GetAndCheckNull(editData.ParentId);
                        editData.Level = parent.Level + 1;
                        editData.RootId = parent.RootId == null ? parent.Id : parent.RootId;
                    }
");
            
            #line 462 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    if(Functions.ContainsKey(Function.Sort))
    {

            
            #line default
            #line hidden
            this.Write("\r\n                    if (Repository.UpdateDiy\r\n                             .Whe" +
                    "re(o => o.ParentId == entity.ParentId && o.Id != entity.Id && o.");
            
            #line 468 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(" > editData.");
            
            #line 468 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(")\r\n                             .Set(o => o.");
            
            #line 469 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(" - 1)\r\n                             .ExecuteAffrows() < 0)\r\n                     " +
                    "   throw new MessageException(\"重新排序失败.\");\r\n\r\n                    editData.");
            
            #line 473 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(" = Repository.Where(o => o.ParentId == editData.ParentId).Max(o => o.");
            
            #line 473 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Sort].Name));
            
            #line default
            #line hidden
            this.Write(") + 1;\r\n");
            
            #line 474 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

            
            #line default
            #line hidden
            this.Write("                }\r\n");
            
            #line 478 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n                if (Repository.UpdateDiy\r\n                      .SetSource(edit" +
                    "Data)\r\n                      .UpdateColumns(typeof(");
            
            #line 484 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Edit]));
            
            #line default
            #line hidden
            this.Write(").GetNamesWithTagAndOther(false, \"_Edit\").ToArray())\r\n                      .Exec" +
                    "uteAffrows() <= 0)\r\n                    throw new MessageException(\"修改");
            
            #line 486 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("失败\");\r\n\r\n                var orId = OperationRecordBusiness.Create(new Common_Ope" +
                    "rationRecord\r\n                {\r\n                    DataType = nameof(");
            
            #line 490 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 491 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("editData", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"修改");
            
            #line 492 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("[@字段说明#待完善@].\",\r\n                    Remark = $\"变更详情: \\r\\n\\t{changed_}\"\r\n        " +
                    "        });\r\n            });\r\n\r\n            if (!success)\r\n                throw" +
                    " ex;\r\n        }\r\n");
            
            #line 500 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

    if(Functions.ContainsKey(Function.Delete))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public void Delete(List<string> keys)\r\n        {\r\n            var entit" +
                    "yList = Repository.Select.Where(c => keys.Contains(");
            
            #line 509 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("c", " + ");
            
            #line default
            #line hidden
            this.Write(")).ToList(c => new { ");
            
            #line 509 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("c", ", ");
            
            #line default
            #line hidden
            this.Write(@" });

            var orList = new List<Common_OperationRecord>();

            foreach (var entity in entityList)
            {
                //@检查数据#待完善@

                orList.Add(new Common_OperationRecord
                {
                    DataType = nameof(");
            
            #line 519 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 520 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("entity", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"删除");
            
            #line 521 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("[@字段说明#待完善@].\"\r\n                });\r\n            }\r\n\r\n            (bool success, " +
                    "Exception ex) = Orm.RunTransaction(() =>\r\n            {\r\n                if (Rep" +
                    "ository.Delete(o => keys.Contains(");
            
            #line 527 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("o", " + ");
            
            #line default
            #line hidden
            this.Write(")) <= 0)\r\n                    throw new MessageException(\"未删除任何数据\");\r\n\r\n         " +
                    "       var orIds = OperationRecordBusiness.Create(orList);\r\n            });\r\n\r\n " +
                    "           if (!success)\r\n                throw new MessageException(\"删除");
            
            #line 534 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("失败\", ex);\r\n        }\r\n");
            
            #line 536 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n        #endregion\r\n\r\n        #region 拓展功能\r\n");
            
            #line 543 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    if(Functions.ContainsKey(Function.Enable))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        public void Enable(");
            
            #line 548 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryParams();
            
            #line default
            #line hidden
            this.Write(", bool enable)\r\n        {\r\n");
            
            #line 550 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    if(PrimaryKeys.Count > 1)
    {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.Where(o => ");
            
            #line 554 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryFieldLinq("o");
            
            #line default
            #line hidden
            this.Write(").GetAndCheckNull();\r\n");
            
            #line 555 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("            var entity = Repository.GetAndCheckNull(");
            
            #line 560 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryTupleParamsName();
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 561 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n            entity.");
            
            #line 565 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FunctionsWithField[Function.Enable].Name));
            
            #line default
            #line hidden
            this.Write(" = enable;\r\n\r\n            (bool success, Exception ex) = Orm.RunTransaction(() =>" +
                    "\r\n            {\r\n                if (Repository.Update(entity) <= 0)\r\n          " +
                    "          throw new MessageException($\"{(enable ? \"启用\" : \"禁用\")}");
            
            #line 570 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("失败\");\r\n\r\n                var orId = OperationRecordBusiness.Create(new Common_Ope" +
                    "rationRecord\r\n                {\r\n                    DataType = nameof(");
            
            #line 574 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 575 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("entity", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"{(enable ? \"启用\" : \"禁用\")}");
            
            #line 576 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("[@字段说明#待完善@].\"\r\n                });\r\n            });\r\n\r\n            if (!success)" +
                    "\r\n                throw ex;\r\n        }\r\n");
            
            #line 583 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }
    
    if(Functions.ContainsKey(Function.Sort))
    {

            
            #line default
            #line hidden
            this.Write(@"
        public void Sort(Sort data)
        {
            if (data.Span == 0 && (data.Method != SortMethod.top || data.Method != SortMethod.low))
                return;

            var current = Repository.Where(o => o.Id == data.Id)
                                    .ToOne(o => new
                                    {
                                        o.Id,
");
            
            #line 599 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                                        o.ParentId,\r\n");
            
            #line 604 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                        o.Sort
                                    });

            if (current == default)
                throw new MessageException(""数据不存在或已被移除."");

            (bool success, Exception ex) = Orm.RunTransaction(() =>
            {
                var target = data.Method switch
                {
");
            
            #line 617 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.top => Repository.Where(o => o.ParentId == current" +
                    ".ParentId)\r\n                                                .OrderBy(o => o.Sort" +
                    ")\r\n");
            
            #line 623 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.top => Repository.Select.OrderBy(o => o.Sort)\r\n");
            
            #line 629 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                                .First(o => new
                                                {
                                                    o.Id,
                                                    o.Sort
                                                }),
");
            
            #line 637 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.up => Repository.Select.Where(o => o.ParentId == c" +
                    "urrent.ParentId && o.Sort < current.Sort)\r\n                                     " +
                    "           .OrderByDescending(o => o.Sort)\r\n");
            
            #line 643 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.up => Repository.Select.OrderByDescending(o => o.S" +
                    "ort)\r\n");
            
            #line 649 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                               .First(o => new
                                               {
                                                   o.Id,
                                                   o.Sort
                                               }),
");
            
            #line 657 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.down => Repository.Select.Where(o => o.ParentId ==" +
                    " current.ParentId && o.Sort > current.Sort)\r\n                                   " +
                    "             .OrderBy(o => o.Sort)\r\n");
            
            #line 663 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.down => Repository.Select.OrderBy(o => o.Sort)\r\n");
            
            #line 669 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                                 .First(o => new
                                                 {
                                                     o.Id,
                                                     o.Sort
                                                 }),
");
            
            #line 677 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.low => Repository.Select.Where(o => o.ParentId == " +
                    "current.ParentId)\r\n                                                .OrderByDesce" +
                    "nding(o => o.Sort)\r\n");
            
            #line 683 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                    SortMethod.low => Repository.Select.OrderByDescending(o => o." +
                    "Sort)\r\n");
            
            #line 689 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                                .First(o => new
                                                {
                                                    o.Id,
                                                    o.Sort
                                                }),
                    _ => throw new MessageException($""不支持的排序方法 {data.Method}.""),
                };

                if (target == default)
                    return;

                if (Repository.UpdateDiy
                         .Where(o => o.Id == target.Id)
                         .Set(o => o.Sort, current.Sort)
                         .ExecuteAffrows() < 0
                    || Repository.UpdateDiy
                         .Where(o => o.Id == current.Id)
                         .Set(o => o.Sort, target.Sort)
                         .ExecuteAffrows() < 0)
                    throw new MessageException(""");
            
            #line 711 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("排序失败.\");\r\n\r\n                var orId = OperationRecordBusiness.Create(new Common_" +
                    "OperationRecord\r\n                {\r\n                    DataType = nameof(");
            
            #line 715 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 716 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("target", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"");
            
            #line 717 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("排序[排序方法: {data.Method}@字段说明#待完善@].\"\r\n                });\r\n            });\r\n\r\n    " +
                    "        if (!success)\r\n                throw ex;\r\n        }\r\n\r\n        public vo" +
                    "id DragSort(");
            
            #line 725 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Tree ? "TreeDragSort" : "DragSort"));
            
            #line default
            #line hidden
            this.Write(@" data)
        {
            if (data.Id == data.TargetId)
                return;

            var current = Repository.Where(o => o.Id == data.Id)
                                    .ToOne(o => new
                                    {
                                        o.Id,
");
            
            #line 734 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                                        o.ParentId,\r\n");
            
            #line 739 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                        o.Sort
                                    });

            if (current == default)
                throw new MessageException(""数据不存在或已被移除."");

            var target = Repository.Where(o => o.Id == data.TargetId)
                                    .ToOne(o => new
                                    {
                                        o.Id,
");
            
            #line 752 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                                        o.ParentId,\r\n                            " +
                    "            o.RootId,\r\n                                        o.Level,\r\n");
            
            #line 759 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"                                        o.Sort
                                    });

            if (target == default)
                throw new MessageException(""目标数据不存在."");

            (bool success, Exception ex) = Orm.RunTransaction(() =>
            {
");
            
            #line 770 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        if(Options.Table.Tree)
        {

            
            #line default
            #line hidden
            this.Write("                if (current.ParentId == target.ParentId)\r\n                {\r\n    " +
                    "                #region 同层级排序\r\n\r\n                    dynamic target_new;\r\n\r\n    " +
                    "                if (data.Append)\r\n                    {\r\n                       " +
                    " target_new = Repository.Where(o => o.ParentId == target.ParentId && o.Sort == t" +
                    "arget.Sort + 1)\r\n                                             .First(o => new\r\n " +
                    "                                            {\r\n                                 " +
                    "                o.Id,\r\n                                                 o.Sort\r\n" +
                    "                                             });\r\n                    }\r\n       " +
                    "             else\r\n                    {\r\n                        target_new = R" +
                    "epository.Where(o => o.ParentId == target.ParentId && o.Sort == current.Sort - 1" +
                    ")\r\n                                             .First(o => new\r\n               " +
                    "                              {\r\n                                               " +
                    "  o.Id,\r\n                                                 o.Sort\r\n              " +
                    "                               });\r\n                    }\r\n\r\n                   " +
                    " string target_newId = target_new.Id;\r\n                    int target_newSort = " +
                    "target_new.Sort;\r\n\r\n                    if (Repository.UpdateDiy\r\n              " +
                    "               .Where(o => o.Id == target_newId)\r\n                             ." +
                    "Set(o => o.Sort, current.Sort)\r\n                             .ExecuteAffrows() <" +
                    " 0\r\n                        || Repository.UpdateDiy\r\n                           " +
                    "  .Where(o => o.Id == current.Id)\r\n                             .Set(o => o.Sort" +
                    ", target_newSort)\r\n                             .ExecuteAffrows() < 0)\r\n        " +
                    "                throw new MessageException(\"");
            
            #line 810 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(@"排序失败."");

                    #endregion
                }
                else
                {
                    #region 异层级排序

                    if (Repository.UpdateDiy
                             .Where(o => o.ParentId == current.ParentId && o.Sort > current.Sort)
                             .Set(o => o.Sort - 1)
                             .ExecuteAffrows() < 0
                        || Repository.UpdateDiy
                             .Where(o => o.ParentId == target.ParentId && o.Sort > (data.Append == true ? target.Sort : (target.Sort - 1)))
                             .Set(o => o.Sort + 1)
                             .ExecuteAffrows() < 0
                        || Repository.UpdateDiy
                                .Where(o => o.Id == current.Id)
                                .Set(o => o.Sort, data.Inside == true ? 0 : (data.Append == true ? (target.Sort + 1) : target.Sort))
                                .Set(o => o.ParentId, data.Inside == true ? target.Id : target.ParentId)
                                .Set(o => o.Level, data.Inside == true ? (target.Level + 1) : target.Level)
                                .Set(o => o.RootId, target.RootId)
                                .ExecuteAffrows() <= 0)
                        throw new MessageException(""");
            
            #line 833 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("排序失败.\");\r\n\r\n                    #endregion\r\n                }\r\n");
            
            #line 837 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                    dynamic target_new;\r\n\r\n                    if (data.Append)\r\n" +
                    "                    {\r\n                        target_new = Repository.Where(o =" +
                    "> o.Sort == target.Sort + 1)\r\n                                             .Firs" +
                    "t(o => new\r\n                                             {\r\n                    " +
                    "                             o.Id,\r\n                                            " +
                    "     o.Sort\r\n                                             });\r\n                 " +
                    "   }\r\n                    else\r\n                    {\r\n                        t" +
                    "arget_new = Repository.Where(o => o.Sort == current.Sort - 1)\r\n                 " +
                    "                            .First(o => new\r\n                                   " +
                    "          {\r\n                                                 o.Id,\r\n           " +
                    "                                      o.Sort\r\n                                  " +
                    "           });\r\n                    }\r\n\r\n                    string target_newId" +
                    " = target_new.Id;\r\n                    int target_newSort = target_new.Sort;\r\n\r\n" +
                    "                    if (Repository.UpdateDiy\r\n                             .Wher" +
                    "e(o => o.Id == target_newId)\r\n                             .Set(o => o.Sort, cur" +
                    "rent.Sort)\r\n                             .ExecuteAffrows() < 0\r\n                " +
                    "        || Repository.UpdateDiy\r\n                             .Where(o => o.Id =" +
                    "= current.Id)\r\n                             .Set(o => o.Sort, target_newSort)\r\n " +
                    "                            .ExecuteAffrows() < 0)\r\n                        thro" +
                    "w new MessageException(\"");
            
            #line 874 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("排序失败.\");\r\n");
            
            #line 875 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n                _ = OperationRecordBusiness.Create(new Common_OperationRecord\r\n" +
                    "                {\r\n                    DataType = nameof(");
            
            #line 881 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    DataId = ");
            
            #line 882 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("target", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    Explain = $\"");
            
            #line 883 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("拖动排序[@字段说明#待完善@].\"\r\n                });\r\n            });\r\n\r\n            if (!succ" +
                    "ess)\r\n                throw ex;\r\n        }\r\n");
            
            #line 890 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }
    
    if(Functions.ContainsKey(Function.Import))
    {

            
            #line default
            #line hidden
            this.Write(@"
        public async Task DownloadTemplate(string version = ExcelVersion.xlsx, bool autogenerateTemplate = true)
        {
            var response = HttpContextAccessor.HttpContext.Response;
            
            response.Headers.Add(""Content-Disposition"", $""attachment; filename=\""{UrlEncoder.Default.Encode(""");
            
            #line 901 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("导入模板\")}.{version}\\\"\");\r\n\r\n            if(autogenerateTemplate)\r\n            {\r\n  " +
                    "              #region 直接发送预制模板\r\n\r\n                var filePath = PathHelper.GetA" +
                    "bsolutePath($\"~/template/");
            
            #line 907 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(@"导入模板.{version}"");
                if (!File.Exists(filePath))
                {
                    response.StatusCode = StatusCodes.Status404NotFound;
                    throw new MessageException(""模板文件不存在或已被移除."");
                }
                await response.SendFileAsync(filePath);

                #endregion
            }
            else
            {
                #region 自动生成模板

                var table = new DataTable(""");
            
            #line 921 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("导入模板\");\r\n\r\n                var type = typeof(");
            
            #line 923 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Import]));
            
            #line default
            #line hidden
            this.Write(@");

                var tag = type.GetMainTag();

                type.GetProperties()
                    .ForEach(o =>
                    {
                        if (o.DeclaringType?.Name != type.Name && !o.HasTag(tag))
                            return;

                        var attr = o.GetCustomAttribute<DescriptionAttribute>();
                        if (attr == null)
                            return;

                        table.Columns.Add(attr.Description, o.PropertyType);
                    });

                var bytes = table.DataTableToExcelBytes(true, version == ExcelVersion.xlsx);
                response.StatusCode = StatusCodes.Status200OK;
                response.ContentType = ""application/octet-stream"";
                response.ContentLength = bytes.Length;
                response.Body.Write(bytes);

                #endregion
            }
        }

        public ImportResult Import(IFormFile file, bool autogenerateTemplate = false)
        {
            DataTable table;

            try
            {
                table = file.OpenReadStream()
                                .ReadExcel(true, file.ContentType == ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"", autogenerateTemplate ? 0 : 1);
            }
            catch (Exception _ex)
            {
                throw new MessageException(""导入失败, 文件有误（请检查格式）."", _ex);
            }

            var type = typeof(");
            
            #line 964 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Import]));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            var properties = type.GetProperties();\r\n\r\n            var tag =" +
                    " type.GetMainTag();\r\n\r\n            var dataList = new List<");
            
            #line 970 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Import]));
            
            #line default
            #line hidden
            this.Write(@">();

            var errors = new List<ErrorInfo>();

            var rowOffset = autogenerateTemplate ? 1 : 3;

            for (int i = 0; i < table.Rows.Count; i++)
            {
                var row = table.Rows[i];
                var data = new ");
            
            #line 979 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Import]));
            
            #line default
            #line hidden
            this.Write("();\r\n\r\n                var _errors = new List<ErrorInfo>();\r\n\r\n                pr" +
                    "operties.ForEach(o =>\r\n                    {\r\n                        if (o.Decl" +
                    "aringType?.Name != type.Name && !o.HasTag(tag))\r\n                            ret" +
                    "urn;\r\n\r\n                        var attr = o.GetCustomAttribute<DescriptionAttri" +
                    "bute>();\r\n                        if (attr == null)\r\n                           " +
                    " return;\r\n\r\n                        if (!table.Columns.Contains(attr.Description" +
                    "))\r\n                        {\r\n                            _errors.Add(new Error" +
                    "Info(i + rowOffset, attr.Description, \"未找到该列。\"));\r\n                            r" +
                    "eturn;\r\n                        }\r\n\r\n                        try\r\n              " +
                    "          {\r\n                            if (o.PropertyType == typeof(bool))\r\n  " +
                    "                              o.SetValue(data, row[attr.Description].ToString() " +
                    "== \"是\");\r\n                            else if (o.PropertyType == typeof(string))" +
                    "\r\n                            {\r\n                                var value = row" +
                    "[attr.Description].ToString();\r\n\r\n                                var attrColumn" +
                    " = o.GetCustomAttribute<ColumnAttribute>();\r\n                                if " +
                    "(attrColumn != null && attrColumn.StringLength > 0 && Encoding.ASCII.GetBytes(va" +
                    "lue).Sum(c => c == 63 ? 2 : 1) > attrColumn.StringLength)\r\n                     " +
                    "           {\r\n                                    _errors.Add(new ErrorInfo(i + " +
                    "rowOffset, attr.Description, $\"数据长度过长, 不可超过{attrColumn.StringLength}个字符（其中每个中文占两" +
                    "个字符）。\"));\r\n                                    return;\r\n                        " +
                    "        }\r\n\r\n                                o.SetValue(data, value);\r\n         " +
                    "                   }\r\n                            else\r\n                        " +
                    "        o.SetValue(data, row[attr.Description].ChangeType(o.PropertyType));\r\n   " +
                    "                     }\r\n                        catch (Exception ex)\r\n          " +
                    "              {\r\n                            _errors.Add(new ErrorInfo(i + rowOf" +
                    "fset, attr.Description, \"数据格式有误。\"));\r\n\r\n                            Logger.Log(\r" +
                    "\n                                NLog.LogLevel.Error,\r\n                         " +
                    "       LogType.警告信息,\r\n                                $\"{file.FileName}文件第{i + r" +
                    "owOffset}行第{attr.Description}列数据格式有误.\",\r\n                                null,\r\n" +
                    "                                ex);\r\n                        }\r\n               " +
                    "     });\r\n                \r\n                //@数据验证#待完善@\r\n                if (_e" +
                    "rrors.Any())\r\n                {\r\n                    errors.AddRange(_errors);\r\n" +
                    "                    continue;\r\n                }\r\n");
            
            #line 1037 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        foreach (var field in RequiredKeys)
        {
            var i = 0;

            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 1042 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? "if" : "else if"));
            
            #line default
            #line hidden
            this.Write(" (data.");
            
            #line 1042 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            
            #line 1042 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.CsType != typeof(string) ? " == null" : ".IsNullOrWhiteSpace()"));
            
            #line default
            #line hidden
            this.Write(")\r\n                {\r\n                    errors.Add(new ErrorInfo(i + rowOffset," +
                    " \"");
            
            #line 1044 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Remark));
            
            #line default
            #line hidden
            this.Write("\", \"内容不能为空。\"));\r\n                    continue;\r\n                }\r\n");
            
            #line 1047 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }

            
            #line default
            #line hidden
            this.Write(@"
                dataList.Add(data);
            }

            if (errors.Any())
                return new ImportResult(errors);

            for (int i = 0; i < dataList.Count; i++)
            {
                var data = dataList[i];

                //分析数据

            }

            if (errors.Any())
                return new ImportResult(errors);

            var result = new ImportResult(0, 0);

            (bool success, Exception ex) = Orm.RunTransaction(() =>
            {
                var newDataList = new List<");
            
            #line 1073 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(">();\r\n                var editDataList = new List<");
            
            #line 1074 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write(@">();
            
                var orList = new List<Common_OperationRecord>();

                dataList.ForEach(entity =>
                {
                    //@数据匹配#待完善@
                    //var idSelect = Repository.Where(o => o.Name == entity.Name);
                    //if (idSelect.Any())
                    //{
                    //    entity.Id = idSelect.ToOne(o => o.Id);
                    //    editDataList.Add(entity.ModifyEntity());
                    //
                    //    orList.Add(new Common_OperationRecord
                    //    {
                    //        DataType = nameof(");
            
            #line 1089 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    //        DataId = ");
            
            #line 1090 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("entity", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    //        Explain = $\"导入数据（更新）");
            
            #line 1091 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(@"[@字段说明#待完善@].""
                    //    });
                    //}
                    //else
                    //{
                    //    newDataList.Add(entity.InitEntity());
                    //
                    //    orList.Add(new Common_OperationRecord
                    //    {
                    //        DataType = nameof(");
            
            #line 1100 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Name));
            
            #line default
            #line hidden
            this.Write("),\r\n                    //        DataId = ");
            
            #line 1101 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
WritePrimaryField("entity", " + ");
            
            #line default
            #line hidden
            this.Write(",\r\n                    //        Explain = $\"导入数据（新增）");
            
            #line 1102 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(@"[@字段说明#待完善@].""
                    //    });
                    //}
                });

                result.AddTotal = newDataList.Count;
                result.UpdateTotal = editDataList.Count;

                if (editDataList.Any())
                    if (Repository.UpdateDiy
                         .SetSource(editDataList)
                         .UpdateColumns(typeof(");
            
            #line 1113 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Import]));
            
            #line default
            #line hidden
            this.Write(").GetNamesWithTagAndOther(false, \"_Edit\").ToArray())\r\n                         .E" +
                    "xecuteAffrows() <= 0)\r\n                        throw new ApplicationException(\"");
            
            #line 1115 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write(@"更改失败."");

                if (newDataList.Any())
                    Repository.Insert(newDataList);

                var orIds = OperationRecordBusiness.Create(orList);
            });

            if (!success)
                throw new ApplicationException(""");
            
            #line 1124 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("导入失败.\", ex);\r\n\r\n            return result;\r\n        }\r\n");
            
            #line 1128 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }
    
    if(Functions.ContainsKey(Function.Export))
    {

            
            #line default
            #line hidden
            this.Write(@"
        public void Export(string version = ExcelVersion.xlsx, string paginationJson = null)
        {
            PaginationDTO pagination;
            if (!paginationJson.IsNullOrWhiteSpace())
                pagination = paginationJson.ToObject<PaginationDTO>();
            else
                pagination = new PaginationDTO { PageIndex = -1 };

            var type = typeof(");
            
            #line 1143 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Export]));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            var entityList = Repository.Select\r\n                           " +
                    "         .GetPagination(pagination)\r\n                                    .ToList" +
                    "<Common_FileUploadConfig, ");
            
            #line 1147 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Export]));
            
            #line default
            #line hidden
            this.Write(">(typeof(Export).GetNamesWithTagAndOther(true, , \"_");
            
            #line 1147 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Export]));
            
            #line default
            #line hidden
            this.Write("\"));\r\n\r\n            var list = Mapper.Map<List<");
            
            #line 1149 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Functions[Function.Export]));
            
            #line default
            #line hidden
            this.Write(">>(entityList);\r\n\r\n            //动态生成模板\r\n            var table = new DataTable(\"");
            
            #line 1152 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n            var propDic = new Dictionary<string, PropertyInfo>();\r\n\r\n     " +
                    "       var tag = type.GetMainTag();\r\n\r\n            //生成列\r\n            type.GetPr" +
                    "operties()\r\n                .ForEach(o =>\r\n                {\r\n                  " +
                    "  if (o.DeclaringType?.Name != type.Name && !o.HasTag(tag))\r\n                   " +
                    "     return;\r\n\r\n                    var attr = o.GetCustomAttribute<DescriptionA" +
                    "ttribute>();\r\n                    if (attr == null)\r\n                        ret" +
                    "urn;\r\n\r\n                    propDic.Add(attr.Description, o);\r\n                 " +
                    "   table.Columns.Add(attr.Description, typeof(string));\r\n                });\r\n\r\n" +
                    "            //生成数据\r\n            list?.ForEach(o =>\r\n            {\r\n             " +
                    "   var row = table.NewRow();\r\n\r\n                propDic.ForEach(d =>\r\n          " +
                    "      {\r\n                    var value = d.Value.GetValue(o);\r\n                 " +
                    "   if (value == null)\r\n                        return;\r\n\r\n                    if" +
                    " (d.Value.PropertyType == typeof(bool))\r\n                        row[d.Key] = (b" +
                    "ool)value == true ? \"是\" : \"否\";\r\n                    else if (d.Key.Contains(\"附件\"" +
                    "))\r\n                        row[d.Key] = string.Join(\" \\r\\n\",\r\n                 " +
                    "                               value.ToString()\r\n                               " +
                    "                 .Split(\',\')\r\n                                                .S" +
                    "elect(e => $\"{Config.WebRootUrl}/file/download/{e}\"));\r\n                    else" +
                    " if (d.Value.PropertyType == typeof(DateTime) || d.Value.PropertyType == typeof(" +
                    "DateTime?))\r\n                    {\r\n                        var attr = d.Value.G" +
                    "etCustomAttribute<JsonConverterAttribute>();\r\n                        if (attr =" +
                    "= null)\r\n                            row[d.Key] = ((DateTime)value).ToString(\"yy" +
                    "yy-MM-dd\");\r\n                        else\r\n                            row[d.Key" +
                    "] = ((DateTime)value).ToString((string)attr.ConverterParameters[0]);\r\n          " +
                    "          }\r\n                    else\r\n                        row[d.Key] = valu" +
                    "e.ToJson().TrimStart(\'\"\').TrimEnd(\'\"\');\r\n                });\r\n\r\n                " +
                    "table.Rows.Add(row);\r\n            });\r\n\r\n            var bytes = table.DataTable" +
                    "ToExcelBytes(true, version == ExcelVersion.xlsx);\r\n\r\n            var response = " +
                    "HttpContextAccessor.HttpContext.Response;\r\n            response.Headers.Add(\"Con" +
                    "tent-Disposition\", $\"attachment; filename=\\\"{UrlEncoder.Default.Encode(\"");
            
            #line 1209 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Options.Table.Remark));
            
            #line default
            #line hidden
            this.Write("\")}.{version}\\\"\");\r\n            response.StatusCode = StatusCodes.Status200OK;\r\n " +
                    "           response.ContentType = \"application/octet-stream\";\r\n            respo" +
                    "nse.ContentLength = bytes.Length;\r\n            response.Body.Write(bytes);\r\n    " +
                    "    }\r\n");
            
            #line 1215 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n        #endregion\r\n    }\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1223 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

    /// <summary>
    /// 主键元祖参数
    /// </summary>
    private void WritePrimaryTupleParams()
    {
        var i = 0;

        if(PrimaryKeys.Count > 1)
        {

        
        #line default
        #line hidden
        
        #line 1233 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 1233 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        foreach (var field in PrimaryKeys)
        {

        
        #line default
        #line hidden
        
        #line 1238 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? ", " : ""));

        
        #line default
        #line hidden
        
        #line 1238 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Type));

        
        #line default
        #line hidden
        
        #line 1238 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }

        if(PrimaryKeys.Count > 1)
        {

        
        #line default
        #line hidden
        
        #line 1244 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(")");

        
        #line default
        #line hidden
        
        #line 1244 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
    }

    /// <summary>
    /// 主键元祖参数名称
    /// </summary>
    private void WritePrimaryTupleParamsName()
    {
        var i = 0;

        if(PrimaryKeys.Count > 1)
        {

        
        #line default
        #line hidden
        
        #line 1257 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 1257 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }

        foreach (var field in PrimaryKeys)
        {

        
        #line default
        #line hidden
        
        #line 1262 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? ", " : ""));

        
        #line default
        #line hidden
        
        #line 1262 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToLower()));

        
        #line default
        #line hidden
        
        #line 1262 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }

        if(PrimaryKeys.Count > 1)
        {

        
        #line default
        #line hidden
        
        #line 1268 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(")");

        
        #line default
        #line hidden
        
        #line 1268 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

        }
    }

    /// <summary>
    /// 主键字段拼接
    /// </summary>
    private void WritePrimaryField(string obj, string symbol)
    {
        var i = 0;
        foreach (var field in PrimaryKeys)
        {

        
        #line default
        #line hidden
        
        #line 1280 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? symbol : ""));

        
        #line default
        #line hidden
        
        #line 1280 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(obj));

        
        #line default
        #line hidden
        
        #line 1280 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 1280 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));

        
        #line default
        #line hidden
        
        #line 1280 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }
    }

    /// <summary>
    /// 主键参数
    /// </summary>
    private void WritePrimaryParams()
    {
        var i = 0;
        foreach (var field in PrimaryKeys)
        {

        
        #line default
        #line hidden
        
        #line 1293 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? ", " : ""));

        
        #line default
        #line hidden
        
        #line 1293 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Type));

        
        #line default
        #line hidden
        
        #line 1293 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 1293 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToLower()));

        
        #line default
        #line hidden
        
        #line 1293 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }
    }

    /// <summary>
    /// 主键字段Linq拼接
    /// </summary>
    private void WritePrimaryFieldLinq(string obj)
    {
        var i = 0;
        foreach (var field in PrimaryKeys)
        {

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? " && " : ""));

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(obj));

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(" == ");

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToLower()));

        
        #line default
        #line hidden
        
        #line 1306 "F:\图锐信息\项目框架学习\GitHub社区项目\Microservice\src\Tools\T4CAGC\Template\Implementation.tt"

            i++;
        }
    }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class ImplementationBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
